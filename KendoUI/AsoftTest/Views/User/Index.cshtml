<!DOCTYPE html>
<html>
<head>
    <base href="https://demos.telerik.com/kendo-ui/grid/editing-inline">
    <style>
        html {
            font-size: 14px;
            font-family: Arial, Helvetica, sans-serif;
        }
    </style>
    <title></title>
    <link href="https://kendo.cdn.telerik.com/themes/7.2.1/default/default-main.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>

    <script src="https://kendo.cdn.telerik.com/2024.1.319/js/kendo.all.min.js"></script>


</head>
<body>
    <div id="example">
        <div id="grid"></div>

        <script>

            var baseURL = window.location.protocol + "//" + window.location.host + "/";
            $.get(baseURL + 'User/GetDataSource', function (data) {
                $(document).ready(function () {
                    var crudServiceBaseUrl = "https://demos.telerik.com/kendo-ui/service",
                        dataSource = new kendo.data.DataSource({
                            transport: {
                                read: {
                                    url: crudServiceBaseUrl + "/Products",
                                    dataType: "jsonp"
                                },
                                update: {
                                    url: crudServiceBaseUrl + "/Products/Update",
                                    dataType: "jsonp"
                                },
                                destroy: {
                                    url: crudServiceBaseUrl + "/Products/Destroy",
                                    dataType: "jsonp"
                                },
                                create: {
                                    url: crudServiceBaseUrl + "/Products/Create",
                                    dataType: "jsonp"
                                },
                                parameterMap: function (options, operation) {
                                    if (operation !== "read" && options.models) {
                                        return { models: kendo.stringify(options.models) };
                                    }
                                }
                            },
                            batch: true,
                            pageSize: 20,
                            schema: {
                                model: {
                                    id: "ProductID",
                                    fields: {
                                        ProductID: { editable: false, nullable: true },
                                        ProductName: { validation: { required: true } },
                                        UnitPrice: { type: "number", validation: { required: true, min: 1 } },
                                        Discontinued: { type: "boolean" },
                                        UnitsInStock: { type: "number", validation: { min: 0, required: true } }
                                    }
                                }
                            }
                        });

                    $("#grid").kendoGrid({
                        dataSource: data,
                        empty:1,    
                        pageable: true,
                        height: 550,
                        toolbar: ["create"],
                        columns: [
                            { field: "UserID", title: "UserID", width: "120px" },
                            { field: "UserName", title: "UserName", width: "120px" },
                            { field: "Password", title: "Password", format: "{0:c}", width: "120px" },
                            { field: "Tel", title: "Tel", format: "{0:c}", width: "120px" },
                            { command: [{ name: "edit" }, "destroy"], title: "&nbsp;", width: "250px" }
                        ],
                        editable: "inline",
                        edit: function (e) {
                            var dataItem = e.model;
                            if (dataItem.UserID == null) {
                                e.container.find("input[name='UserID']").prop("disabled", false);
                                empty = 1;
                            }
                            else {
                                // Khóa cột UserID bằng cách tìm phần tử input có tên trường là UserID và tắt thuộc tính "disabled"
                                e.container.find("input[name='UserID']").prop("disabled", true);
                                empty = 0;
                            }                
                        },


                        save: function (e) { 
                            var dataItem = e.model;
                            //neu userID rong thi create
                            if (empty == 1) {
                                $.ajax({
                                    type: "POST",
                                    url: baseURL + 'User/ThemUser',
                                    data: {
                                        userID: dataItem.UserID, // Truyền userID của dòng đang được chỉnh sửa
                                        userName: dataItem.UserName,
                                        password: dataItem.Password,
                                        tel: dataItem.Tel
                                    },
                                    success: function (result) {
                                        if (result.success) {
                                            alert(result.message);
                                            if (result.user) {
                                                e.model.set("UserName", result.user.UserName);
                                                e.model.set("Password", result.user.Password);
                                                e.model.set("Tel", result.user.Tel);
                                            }
                                            //    $("#grid").data("kendoGrid").dataSource.read();
                                            location.reload();

                                        } else {
                                            alert("Error: " + result.message);
                                        }
                                    },
                                    error: function (error) {
                                        alert("Error: " + error);
                                    }
                                });
                            }
                            //neu userID khong rong thi update
                            else if (empty == 0) {
                                $.ajax({
                                    type: "POST",
                                    url: baseURL + 'User/SuaUser',
                                    data: {
                                        userID: dataItem.UserID, // Truyền userID của dòng đang được chỉnh sửa
                                        userName: dataItem.UserName,
                                        password: dataItem.Password,
                                        tel: dataItem.Tel
                                    },
                                    success: function (result) {
                                        if (result.success) {
                                            alert(result.message);
                                            // Nếu thành công, làm mới grid để hiển thị dữ liệu mới
                                            if (result.user) {
                                                e.model.set("UserName", result.user.UserName);
                                                e.model.set("Password", result.user.Password);
                                                e.model.set("Tel", result.user.Tel);
                                            }
                                              //  $("#grid").data("kendoGrid").dataSource.read();
                                           location.reload();

                                        } else {
                                            alert("Error: " + result.message);
                                        }
                                    },
                                    error: function (error) {
                                        alert("Error: " + error);
                                    }
                                });
                            }                                                       
                        },
                                                               
                        remove: function (e) {
                            var dataItem = e.model;
                            $.ajax({
                                type: "POST",
                                url: baseURL + 'User/XoaUser',
                                data: { userID: dataItem.UserID },
                                success: function (result) {
 
                                },
                                error: function (error) {

                                }
                            });
                        }
                    });
                
          
                });
            });
        </script>
    </div>



</body>
</html>
